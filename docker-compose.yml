version: '3.9'

services:

  kong:
    image: kong:2.5.0-alpine
    hostname: kong
    container_name: kong
    environment:
      KONG_DATABASE: 'off'
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yml"
      command: "kong start"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    volumes:
        - ./infrastructure-config:/opt/kong
    depends_on:
      - mongo
    networks:
      - zetting


  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=admin
  #   ports:
  #       - 5672:5672
  #       - 15672:15672
  #   volumes:
  #       - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #       - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  #   networks:
  #       - zetting

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

    # depends_on:
    #   - rabbitmq
    ports:
      - 27018:27017
    networks:
      - zetting



  zetting-user:
    environment:
      MQ_URI: amqp://admin:admin@rabbitmq:5672/
      MONGODB_URI: mongodb://root:example@mongo:27017/
    build: ./services/service-users/.
    restart: always
    ports:
      - 3000
    depends_on:
      - mongo
    networks:
      - zetting
    # entrypoint:
    #   - dockerize
    #   - -timeout
    #   - 60s
    #   - -wait
    #   - tcp://rabbitmq:15672
    # command: ./main

networks:
  zetting:
    driver: bridge
volumes:
  data1-1:
  data1-2:
